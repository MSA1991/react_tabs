{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tab","tabId","title","onTabSelected","href","onClick","Tabs","tabs","selectedTabId","className","map","tab","index","id","classNames","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8LAMaA,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,cAAjB,OAClC,mBACEC,KAAI,eAAUH,GACd,UAAQ,UACRI,QAAS,kBAAMF,EAAcF,IAH/B,SAKGC,KCFQI,EAAwB,SAAC,GAAD,IACnCC,EADmC,EACnCA,KACAC,EAFmC,EAEnCA,cACAL,EAHmC,EAGnCA,cAHmC,OAKnC,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGF,EAAKG,KAAI,SAACC,EAAKC,GACd,IAAQC,EAAcF,EAAdE,GAAIX,EAAUS,EAAVT,MACND,EAAQW,EAAQ,EAEtB,OACE,oBAEE,UAAQ,MACRH,UAAWK,IAAW,CACpB,YAAab,IAAUO,IAJ3B,SAOE,cAAC,EAAD,CACEP,MAAOA,EACPC,MAAOA,EACPC,cAAeA,KATZU,UAiBf,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAKC,EAAgB,GAAGO,cCnClBR,G,kBAAe,CAC1B,CAAEM,GAAI,QAASX,MAAO,QAASa,QAAS,eACxC,CAAEF,GAAI,QAASX,MAAO,QAASa,QAAS,eACxC,CAAEF,GAAI,QAASX,MAAO,QAASa,QAAS,iBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,GAAnD,mBAAOT,EAAP,KAAsBU,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,uCAC0BD,KAG1B,cAAC,EAAD,CACED,KAAMA,EACNC,cAAeA,EACfL,cAbgB,SAACF,GACrBiB,EAAiBjB,UCdrBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.43b9f30f.chunk.js","sourcesContent":["type Props = {\n  tabId: number,\n  title: string,\n  onTabSelected: (tabId: number) => void,\n};\n\nexport const Tab: React.FC<Props> = ({ tabId, title, onTabSelected }) => (\n  <a\n    href={`#tab-${tabId}`}\n    data-cy=\"TabLink\"\n    onClick={() => onTabSelected(tabId)}\n  >\n    {title}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Tab } from '../Tab';\nimport { TTab } from '../../types/Tab';\n\ntype Props = {\n  tabs: TTab[],\n  selectedTabId: number,\n  onTabSelected: (tabId: number) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => (\n  <div data-cy=\"TabsComponent\">\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map((tab, index) => {\n          const { id, title } = tab;\n          const tabId = index + 1;\n\n          return (\n            <li\n              key={id}\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': tabId === selectedTabId,\n              })}\n            >\n              <Tab\n                tabId={tabId}\n                title={title}\n                onTabSelected={onTabSelected}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n\n    <div className=\"block\" data-cy=\"TabContent\">\n      {tabs[selectedTabId - 1].content}\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TTab } from './types/Tab';\n\nexport const tabs: TTab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(1);\n\n  const onTabSelected = (tabId: number) => {\n    setSelectedTabId(tabId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is Tab ${selectedTabId}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}